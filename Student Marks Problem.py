student_list = {'Zane Davis': {'Math': 6,
  'Physics': 44,
  'Chemistry': 63,
  'Biology': 81,
  'English': 0,
  'History': 12,
  'Geography': 24,
  'Art': 15,
  'Music': 27,
  'PE': 39},
 'Quentin Garcia': {'Math': 95,
  'Physics': 51,
  'Chemistry': 82,
  'Biology': 44,
  'English': 63,
  'History': 83,
  'Geography': 46,
  'Art': 45,
  'Music': 65,
  'PE': 31},
 'Charlie Garcia': {'Math': 44,
  'Physics': 32,
  'Chemistry': 51,
  'Biology': 69,
  'English': 73,
  'History': 89,
  'Geography': 55,
  'Art': 61,
  'Music': 62,
  'PE': 81},
 'Xander Johnson': {'Math': 2,
  'Physics': 62,
  'Chemistry': 15,
  'Biology': 80,
  'English': 66,
  'History': 64,
  'Geography': 99,
  'Art': 48,
  'Music': 11,
  'PE': 3},
 'Ethan Wilson': {'Math': 27,
  'Physics': 40,
  'Chemistry': 20,
  'Biology': 67,
  'English': 13,
  'History': 24,
  'Geography': 79,
  'Art': 65,
  'Music': 12,
  'PE': 63},
 'Sam Johnson': {'Math': 72,
  'Physics': 39,
  'Chemistry': 23,
  'Biology': 22,
  'English': 54,
  'History': 86,
  'Geography': 32,
  'Art': 96,
  'Music': 49,
  'PE': 64},
 'Wendy Wilson': {'Math': 46,
  'Physics': 38,
  'Chemistry': 94,
  'Biology': 15,
  'English': 41,
  'History': 23,
  'Geography': 41,
  'Art': 35,
  'Music': 47,
  'PE': 100},
 'Fiona Brown': {'Math': 80,
  'Physics': 33,
  'Chemistry': 93,
  'Biology': 58,
  'English': 55,
  'History': 29,
  'Geography': 72,
  'Art': 19,
  'Music': 89,
  'PE': 60},
 'George Wilson': {'Math': 1,
  'Physics': 92,
  'Chemistry': 23,
  'Biology': 3,
  'English': 81,
  'History': 40,
  'Geography': 83,
  'Art': 95,
  'Music': 12,
  'PE': 27},
 'Nina Brown': {'Math': 6,
  'Physics': 56,
  'Chemistry': 99,
  'Biology': 96,
  'English': 90,
  'History': 71,
  'Geography': 37,
  'Art': 3,
  'Music': 51,
  'PE': 32},
 'Sam Smith': {'Math': 9,
  'Physics': 37,
  'Chemistry': 19,
  'Biology': 46,
  'English': 46,
  'History': 7,
  'Geography': 25,
  'Art': 83,
  'Music': 64,
  'PE': 47},
 'Laura Jones': {'Math': 92,
  'Physics': 59,
  'Chemistry': 19,
  'Biology': 49,
  'English': 6,
  'History': 29,
  'Geography': 29,
  'Art': 53,
  'Music': 37,
  'PE': 88},
 'Tina Brown': {'Math': 52,
  'Physics': 100,
  'Chemistry': 51,
  'Biology': 51,
  'English': 3,
  'History': 7,
  'Geography': 80,
  'Art': 50,
  'Music': 22,
  'PE': 38},
 'Victor Miller': {'Math': 98,
  'Physics': 25,
  'Chemistry': 70,
  'Biology': 77,
  'English': 6,
  'History': 28,
  'Geography': 37,
  'Art': 43,
  'Music': 50,
  'PE': 17},
 'Ethan Rodriguez': {'Math': 39,
  'Physics': 99,
  'Chemistry': 3,
  'Biology': 52,
  'English': 100,
  'History': 48,
  'Geography': 23,
  'Art': 61,
  'Music': 58,
  'PE': 56},
 'Julia Smith': {'Math': 87,
  'Physics': 92,
  'Chemistry': 78,
  'Biology': 84,
  'English': 8,
  'History': 90,
  'Geography': 65,
  'Art': 6,
  'Music': 22,
  'PE': 49},
 'Quentin Wilson': {'Math': 85,
  'Physics': 61,
  'Chemistry': 21,
  'Biology': 23,
  'English': 64,
  'History': 49,
  'Geography': 100,
  'Art': 99,
  'Music': 25,
  'PE': 55},
 'Uma Miller': {'Math': 3,
  'Physics': 1,
  'Chemistry': 23,
  'Biology': 25,
  'English': 23,
  'History': 2,
  'Geography': 65,
  'Art': 22,
  'Music': 10,
  'PE': 19},
 'Julia Johnson': {'Math': 40,
  'Physics': 35,
  'Chemistry': 1,
  'Biology': 65,
  'English': 91,
  'History': 27,
  'Geography': 55,
  'Art': 55,
  'Music': 7,
  'PE': 32},
 'Laura Miller': {'Math': 16,
  'Physics': 42,
  'Chemistry': 36,
  'Biology': 15,
  'English': 71,
  'History': 58,
  'Geography': 82,
  'Art': 39,
  'Music': 54,
  'PE': 38},
 'Diana Rodriguez': {'Math': 83,
  'Physics': 98,
  'Chemistry': 86,
  'Biology': 53,
  'English': 86,
  'History': 27,
  'Geography': 78,
  'Art': 58,
  'Music': 79,
  'PE': 22},
 'Wendy Garcia': {'Math': 88,
  'Physics': 51,
  'Chemistry': 38,
  'Biology': 34,
  'English': 11,
  'History': 87,
  'Geography': 74,
  'Art': 82,
  'Music': 82,
  'PE': 53},
 'Tina Davis': {'Math': 39,
  'Physics': 4,
  'Chemistry': 20,
  'Biology': 63,
  'English': 41,
  'History': 18,
  'Geography': 71,
  'Art': 30,
  'Music': 71,
  'PE': 27},
 'Hannah Miller': {'Math': 34,
  'Physics': 49,
  'Chemistry': 95,
  'Biology': 40,
  'English': 68,
  'History': 79,
  'Geography': 24,
  'Art': 98,
  'Music': 51,
  'PE': 45},
 'Laura Wilson': {'Math': 97,
  'Physics': 4,
  'Chemistry': 35,
  'Biology': 96,
  'English': 19,
  'History': 62,
  'Geography': 4,
  'Art': 77,
  'Music': 68,
  'PE': 87},
 'Mike Smith': {'Math': 80,
  'Physics': 98,
  'Chemistry': 83,
  'Biology': 70,
  'English': 8,
  'History': 98,
  'Geography': 38,
  'Art': 30,
  'Music': 20,
  'PE': 3},
 'Kevin Wilson': {'Math': 90,
  'Physics': 19,
  'Chemistry': 95,
  'Biology': 33,
  'English': 95,
  'History': 15,
  'Geography': 95,
  'Art': 98,
  'Music': 95,
  'PE': 67},
 'Bob Garcia': {'Math': 81,
  'Physics': 14,
  'Chemistry': 97,
  'Biology': 32,
  'English': 42,
  'History': 32,
  'Geography': 11,
  'Art': 5,
  'Music': 94,
  'PE': 28},
 'Diana Brown': {'Math': 22,
  'Physics': 92,
  'Chemistry': 96,
  'Biology': 59,
  'English': 93,
  'History': 50,
  'Geography': 87,
  'Art': 100,
  'Music': 0,
  'PE': 88},
 'Quentin Johnson': {'Math': 96,
  'Physics': 57,
  'Chemistry': 88,
  'Biology': 74,
  'English': 16,
  'History': 53,
  'Geography': 61,
  'Art': 90,
  'Music': 12,
  'PE': 72},
 'Mike Jones': {'Math': 72,
  'Physics': 41,
  'Chemistry': 46,
  'Biology': 68,
  'English': 51,
  'History': 25,
  'Geography': 73,
  'Art': 97,
  'Music': 84,
  'PE': 92},
 'Hannah Wilson': {'Math': 79,
  'Physics': 93,
  'Chemistry': 85,
  'Biology': 45,
  'English': 4,
  'History': 19,
  'Geography': 79,
  'Art': 91,
  'Music': 37,
  'PE': 100},
 'Ethan Jones': {'Math': 67,
  'Physics': 53,
  'Chemistry': 36,
  'Biology': 6,
  'English': 50,
  'History': 32,
  'Geography': 71,
  'Art': 79,
  'Music': 85,
  'PE': 16},
 'Laura Brown': {'Math': 17,
  'Physics': 81,
  'Chemistry': 77,
  'Biology': 70,
  'English': 5,
  'History': 7,
  'Geography': 28,
  'Art': 68,
  'Music': 51,
  'PE': 4},
 'Rachel Garcia': {'Math': 71,
  'Physics': 67,
  'Chemistry': 74,
  'Biology': 10,
  'English': 67,
  'History': 82,
  'Geography': 58,
  'Art': 65,
  'Music': 90,
  'PE': 64},
 'Zane Brown': {'Math': 87,
  'Physics': 21,
  'Chemistry': 90,
  'Biology': 82,
  'English': 56,
  'History': 63,
  'Geography': 27,
  'Art': 98,
  'Music': 79,
  'PE': 65},
 'Ethan Johnson': {'Math': 54,
  'Physics': 6,
  'Chemistry': 0,
  'Biology': 79,
  'English': 98,
  'History': 65,
  'Geography': 41,
  'Art': 35,
  'Music': 92,
  'PE': 85},
 'Bob Davis': {'Math': 18,
  'Physics': 13,
  'Chemistry': 66,
  'Biology': 65,
  'English': 32,
  'History': 48,
  'Geography': 26,
  'Art': 54,
  'Music': 44,
  'PE': 64},
 'Xander Williams': {'Math': 52,
  'Physics': 44,
  'Chemistry': 31,
  'Biology': 81,
  'English': 30,
  'History': 72,
  'Geography': 96,
  'Art': 78,
  'Music': 96,
  'PE': 63},
 'Ian Miller': {'Math': 50,
  'Physics': 78,
  'Chemistry': 25,
  'Biology': 24,
  'English': 81,
  'History': 75,
  'Geography': 75,
  'Art': 80,
  'Music': 39,
  'PE': 41},
 'Sam Williams': {'Math': 81,
  'Physics': 91,
  'Chemistry': 75,
  'Biology': 57,
  'English': 69,
  'History': 39,
  'Geography': 17,
  'Art': 29,
  'Music': 41,
  'PE': 44},
 'Oscar Williams': {'Math': 61,
  'Physics': 10,
  'Chemistry': 68,
  'Biology': 29,
  'English': 5,
  'History': 99,
  'Geography': 58,
  'Art': 37,
  'Music': 66,
  'PE': 52},
 'Oscar Miller': {'Math': 58,
  'Physics': 74,
  'Chemistry': 23,
  'Biology': 37,
  'English': 50,
  'History': 26,
  'Geography': 13,
  'Art': 100,
  'Music': 87,
  'PE': 38},
 'Bob Williams': {'Math': 95,
  'Physics': 49,
  'Chemistry': 20,
  'Biology': 97,
  'English': 16,
  'History': 37,
  'Geography': 58,
  'Art': 31,
  'Music': 61,
  'PE': 72},
 'Fiona Rodriguez': {'Math': 79,
  'Physics': 34,
  'Chemistry': 65,
  'Biology': 77,
  'English': 21,
  'History': 35,
  'Geography': 18,
  'Art': 22,
  'Music': 32,
  'PE': 33},
 'Ian Jones': {'Math': 86,
  'Physics': 90,
  'Chemistry': 49,
  'Biology': 23,
  'English': 88,
  'History': 15,
  'Geography': 49,
  'Art': 38,
  'Music': 97,
  'PE': 17},
 'Alice Rodriguez': {'Math': 7,
  'Physics': 16,
  'Chemistry': 29,
  'Biology': 13,
  'English': 31,
  'History': 30,
  'Geography': 18,
  'Art': 97,
  'Music': 45,
  'PE': 85},
 'Uma Smith': {'Math': 68,
  'Physics': 90,
  'Chemistry': 26,
  'Biology': 66,
  'English': 21,
  'History': 19,
  'Geography': 66,
  'Art': 37,
  'Music': 31,
  'PE': 70},
 'Zane Wilson': {'Math': 53,
  'Physics': 21,
  'Chemistry': 47,
  'Biology': 75,
  'English': 27,
  'History': 78,
  'Geography': 1,
  'Art': 56,
  'Music': 70,
  'PE': 96},
 'Xander Rodriguez': {'Math': 12,
  'Physics': 22,
  'Chemistry': 23,
  'Biology': 69,
  'English': 93,
  'History': 88,
  'Geography': 94,
  'Art': 22,
  'Music': 28,
  'PE': 43}
 }

student_name = []
student_marks = []
course_name = []
course_score = []

def swap(a, b):
    c = a 
    a = b
    b = c
    return a, b

def bubble_sort(list_name, list_score):
    for i in range(len(list_score)):
        for j in range(len(list_score)-i-1):
            if list_score[j] < list_score[j+1]:
                list_score[j], list_score[j+1] = swap(list_score[j], list_score[j+1])
                list_name[j], list_name[j+1] = swap(list_name[j], list_name[j+1])
    return list_name, list_score

def top_three_course(student):
    course_name = []
    course_score = []
    for course, score in student_list[student].items():
        course_name.append(course)
        course_score.append(score)
    course_name, course_score = bubble_sort(course_name, course_score)
    top_three = ''
    for i in range(3):
        top_three = top_three + course_name[i] + ' : ' + str(course_score[i]) + ' '
    return top_three

def top_three_student(course):
    student_name = []
    student_score = []
    for student, scores in student_list.items():
        student_name.append(student)
        student_score.append(scores[course])
    top_three = ''
    student_name, student_score = bubble_sort(student_name, student_score)
    top_three = ''
    for i in range(3):
        top_three = top_three + student_name[i] + ' : ' + str(student_score[i]) + ' '
    return top_three

for student, marks in student_list.items():
    student_name.append(student)
    total = 0
    for course, score in marks.items():
        if course not in course_name:
            course_name.append(course)
            course_score.append(score)
        else:
            course_score[course_name.index(course)] = score + course_score[course_name.index(course)] 
        total = total + score
    student_marks.append(total)

print('Student Information:\n--------------------\n')
for student in range(len(student_name)):
    print(f'{student_name[student]}: {student_marks[student]}, {student_marks[student]/10} == {top_three_course(student_name[student])}\n')

print('\nCourse Information\n------------------\n')
for course in range(len(course_name)):
    print(f'{course_name[course]}: {course_score[course]/len(student_name)} == {top_three_student(course_name[course])}\n')

def find_max(sc, cm, ar):
    ans = 1
    mx = sc
    if cm > mx:
        ans = 2
        mx = cm
    if ar > mx:
        ans = 3
        mx = ar
    return ans
    
science= []
commerce = []
arts = []

for student, marks in student_list.items():
    _list = list(marks.values())
    sc = (_list[0] + _list[1] + _list[2] + _list[3])/4
    cm = (_list[4] + _list[5] + _list[6])/3
    ar = (_list[7] + _list[8] + _list[9])/3
    if find_max(sc, cm, ar) == 1:
        science.append(student)
    elif find_max(sc, cm, ar) == 2:
        commerce.append(student)
    else:
        arts.append(student)
print('Science\n--------')
for student in science:
    print(student)
print('Commerce\n--------')
for student in commerce:
    print(student)
print('Arts\n-----')
for student in arts:
    print(student)
